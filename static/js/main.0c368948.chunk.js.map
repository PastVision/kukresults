{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["URL","App","loaded","useState","events","setEvents","results","setResults","cookie","viewstate","viewstategen","body","setBody","captcha","setCaptcha","prn","setprn","eventID","seteventID","loading","setLoading","resID","setresID","details","setDetails","marks","setMarks","error","setError","error2","setError2","total","setTotal","showResult","setShowResult","resultsRef","useRef","toPrint","handlePrint","useReactToPrint","content","current","useEffect","getEvents","subLength","axios","get","catch","err","console","log","then","resp","data","className","Form","onSubmit","event","preventDefault","method","url","newviewstate","sems","newRes","forEach","sem","semester","event_name","toString","substring","search","push","scrollIntoView","behavior","block","Group","controlId","Label","Control","as","onChange","target","value","required","map","eve","index","date","Object","keys","type","placeholder","variant","Image","src","style","padding","onLoad","Alert","fontSize","Button","disabled","length","ref","marksheet","Modal","size","aria-labelledby","centered","show","onHide","Header","closeButton","Title","id","Body","margin","Table","striped","bordered","responsive","element","subject","Footer","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAOMA,EAAM,+BAyTGC,EAtTH,WACV,IAAIC,GAAS,EADG,EAEYC,mBAAS,IAFrB,mBAETC,EAFS,KAEDC,EAFC,OAGcF,mBAAS,IAHvB,mBAGTG,EAHS,KAGAC,EAHA,OAIQJ,mBAAS,CAC/BK,OAAQ,GACRC,UAAW,GACXC,aAAc,KAPA,mBAITC,EAJS,KAIHC,EAJG,OAScT,mBAAS,IATvB,mBASTU,EATS,KASAC,EATA,OAUMX,mBAAS,IAVf,mBAUTY,EAVS,KAUJC,EAVI,OAWcb,mBAAS,KAXvB,mBAWTc,EAXS,KAWAC,EAXA,OAYcf,oBAAS,GAZvB,mBAYTgB,EAZS,KAYAC,EAZA,OAaUjB,mBAAS,MAbnB,mBAaTkB,EAbS,KAaFC,EAbE,OAccnB,mBAAS,MAdvB,mBAcToB,EAdS,KAcAC,EAdA,OAeUrB,mBAAS,MAfnB,mBAeTsB,EAfS,KAeFC,EAfE,OAgBUvB,mBAAS,MAhBnB,oBAgBTwB,GAhBS,MAgBFC,GAhBE,SAiBYzB,mBAAS,MAjBrB,qBAiBT0B,GAjBS,MAiBDC,GAjBC,SA2BU3B,mBAAS,MA3BnB,qBA2BT4B,GA3BS,MA2BFC,GA3BE,SA4BoB7B,oBAAS,GA5B7B,qBA4BT8B,GA5BS,MA4BGC,GA5BH,MA6BVC,GAAaC,iBAAO,MACpBC,GAAUD,iBAAO,MAEjBE,GAAcC,0BAAgB,CAClCC,QAAS,kBAAMH,GAAQI,WAMzBC,qBAAU,WACHxC,GAAQyC,KACbzC,GAAS,IACR,IACH,IAAI0C,GAAY,EAuFVD,GAAY,WAChBvB,GAAW,GACXyB,IACGC,IAAI9C,EAAM,WACV+C,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC3BG,MAAK,SAACC,GACL/C,EAAU+C,EAAKC,KAAKjD,QACpBQ,EAAQ,CACNJ,OAAQ4C,EAAKC,KAAK7C,OAClBC,UAAW2C,EAAKC,KAAK5C,UACrBC,aAAc0C,EAAKC,KAAK3C,mBAKhC,OACE,sBAAK4C,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,6CACA,gDAEF,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,UAAf,SACE,eAACC,EAAA,EAAD,CAAMC,SA3EK,SAACC,GAGlB,GAFA7B,GAAS,MACT6B,EAAMC,iBACS,KAAXzC,EAGF,OAFAW,GAAS,4BACTR,GAAW,GAGbA,GAAW,GACX,IAAIiC,EAAO,CACTtC,IAAKA,EACLE,QAASA,EACTJ,QAASA,EACTL,OAAQG,EAAKH,OACbC,UAAWE,EAAKF,UAChBC,aAAcC,EAAKD,cAErBmC,IAAM,CACJc,OAAQ,OACRC,IAAK5D,EAAM,kBACXqD,KAAMA,IAELN,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC3BG,MAAK,SAACC,GACL,OAAIA,EAAKC,KAAK1B,MACLyB,EAAKC,MAEdzC,EAAQ,CACNJ,OAAQG,EAAKH,OACbC,UAAW2C,EAAKC,KAAKQ,aACrBnD,aAAcC,EAAKD,eAEd0C,EAAKC,KAAK/C,YAElB6C,MAAK,SAACW,GACL,GAAIA,EAAKnC,MAGP,OAFAC,GAASkC,EAAKnC,YACdP,GAAW,GAGb,IAAI2C,EAAS,GACbD,EAAKE,SAAQ,SAACC,GACZ,IAAIC,EAAWD,EAAIE,WAAWC,WAC9BF,EAAWA,EAASG,UAAUH,EAASI,OAAO,QAC9CP,EAAOQ,KAAKL,MAEd3D,EAAWwD,GACG5B,GAxFdM,QAAQ+B,eAAe,CAAEC,SAAU,SAAUC,MAAO,UAyFpDtD,GAAW,OA2BT,UACE,eAACmC,EAAA,EAAKoB,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACrB,EAAA,EAAKsB,MAAN,gCACA,eAACtB,EAAA,EAAKuB,QAAN,CACEC,GAAG,SACHC,SAAU,SAACvB,GAAD,OAAWvC,EAAWuC,EAAMwB,OAAOC,QAC7CC,UAAQ,EAHV,UAKE,wBAAQD,MAAM,IAAd,0BACC9E,IAAW,IACVA,EAAOgF,KAAI,SAACC,EAAKC,GACf,IAAIC,EAAOC,OAAOC,KAAKJ,GAAK,GAC5B,OACE,wBAAQH,MAAOG,EAAIE,GAAnB,SACGA,EAAKnB,YADuBiB,EAAIE,aAO7C,eAAChC,EAAA,EAAKoB,MAAN,CAAYC,UAAU,YAAtB,UACE,cAACrB,EAAA,EAAKsB,MAAN,wBACA,cAACtB,EAAA,EAAKuB,QAAN,CACEY,KAAK,OACLC,YAAY,kBACZX,SAAU,SAACvB,GAAD,OAAWzC,EAAOyC,EAAMwB,OAAOC,QACzCC,UAAQ,EACRS,QAAQ,cAGZ,eAACrC,EAAA,EAAKoB,MAAN,CAAYC,UAAU,gBAAtB,UACE,cAACrB,EAAA,EAAKsB,MAAN,iCACA,uBACA,cAACgB,EAAA,EAAD,CACEC,IAAK9F,EAAM,YAAcW,EAAKH,OAC9BuF,MAAO,CAAEC,QAAS,IAClBC,OAAQ,kBAAM7E,GAAW,MAE3B,uBACA,cAACmC,EAAA,EAAKuB,QAAN,CACEY,KAAK,OACLC,YAAY,UACZX,SAAU,SAACvB,GAAD,OAAW3C,EAAW2C,EAAMwB,OAAOC,QAC7CC,UAAQ,OAGD,OAAVxD,IACC,cAACuE,EAAA,EAAD,CAAON,QAAQ,UAAUG,MAAO,CAAEI,SAAU,IAA5C,SACGxE,KAGL,cAACyE,EAAA,EAAD,CAAQR,QAAQ,UAAUF,KAAK,SAASW,SAAUlF,EAAlD,SACGA,EAAU,aAAe,uBAI/Bb,EAAQgG,OAAS,GAChB,qBAAKC,IAAKpE,GAAYmB,UAAU,UAAhC,SACE,eAACC,EAAA,EAAD,CAAMC,SAtKE,SAACC,GAGjB,GAFA3B,GAAU,MACV2B,EAAMC,iBACO,MAATrC,EAGF,OAFAS,GAAU,+BACVV,GAAW,GAGbA,GAAW,GACX,IAAIiC,EAAO,CACTtC,IAAKA,EACLM,MAAOA,EACPJ,QAASA,EACTJ,QAASA,EACTL,OAAQG,EAAKH,OACbC,UAAWE,EAAKF,UAChBC,aAAcC,EAAKD,cAErBmC,IAAM,CACJc,OAAQ,OACRC,IAAK5D,EAAM,yBACXqD,KAAMA,IAELN,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC3BG,MAAK,SAACC,GACL5B,EAAW4B,EAAKC,KAAK9B,SACrBG,EAAS0B,EAAKC,KAAKmD,WACnBxE,GAASoB,EAAKC,KAAKtB,OACnBX,GAAW,GACXc,IAAc,OAyIV,UACE,eAACqB,EAAA,EAAKoB,MAAN,CAAYC,UAAU,YAAtB,UACE,cAACrB,EAAA,EAAKsB,MAAN,8BACA,eAACtB,EAAA,EAAKuB,QAAN,CACEC,GAAG,SACHC,SAAU,SAACvB,GAAD,OAAWnC,EAASmC,EAAMwB,OAAOC,QAC3CC,UAAQ,EAHV,UAKE,wBAAQD,MAAM,KAAd,sBACC5E,EAAQgG,OAAS,GAChBhG,EAAQ8E,KAAI,SAACnB,EAAKqB,GAChB,OACE,wBAAQJ,MAAOI,EAAf,SACGrB,EAAIG,YADoBkB,YAOzB,OAAXzD,IACC,cAACqE,EAAA,EAAD,CAAON,QAAQ,UAAUG,MAAO,CAAEI,SAAU,IAA5C,SACGtE,KAGL,cAACuE,EAAA,EAAD,CAAQR,QAAQ,UAAUF,KAAK,SAASW,SAAUlF,EAAlD,SACGA,EAAU,aAAe,qBAKxB,MAATY,IACC,eAAC0E,EAAA,EAAD,CACEC,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EACRC,KAAM5E,GACN6E,OAAQ,kBAAM5E,IAAc,IAL9B,UAOE,cAACuE,EAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACP,EAAA,EAAMQ,MAAP,CAAaC,GAAG,gCAAhB,2BAIF,cAACT,EAAA,EAAMU,KAAP,UACE,sBAAKpB,MAAO,CAAEI,SAAU,GAAIiB,OAAQ,GAAKb,IAAKlE,GAA9C,UACG,mBAAqBd,EAAQ,kBADhC,IACmD,uBAChD,kBAAoBA,EAAQ,iBAF/B,IAEiD,uBAC9C,kBAAoBA,EAAQ,iBAH/B,IAGiD,uBAC/C,uBACA,eAAC8F,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,YAAU,EAAlC,UACE,gCAnPI,CAClB,aACA,aACA,OACA,WACA,WACA,QACA,UA6O6BpC,KAAI,SAACqC,EAASnC,GAAV,OACf,6BAAiBmC,GAARnC,QAGb,gCACY,MAAT7D,GACCA,EAAM2D,KAAI,SAACsC,EAASpC,GAIlB,GAHkB,IAAd1C,KACFA,GAAY8E,EAAQpB,QAElBoB,EAAQpB,SAAW1D,GACrB,OACE,+BACE,6BAAK8E,EAAQ,KACb,6BAAKA,EAAQ,KACb,6BAAKA,EAAQ,KACb,6BAAKA,EAAQ,GAAK,IAAMA,EAAQ,KAChC,6BAAKA,EAAQ,GAAK,IAAMA,EAAQ,KAChC,6BAAKA,EAAQ,IAAM,IAAMA,EAAQ,KACjC,6BAAKA,EAAQ,iBAOjB,MAAT3F,IACCA,GAAMqD,KAAI,SAACqC,EAASnC,GAClB,OACE,qCACGmC,EAAQrD,WADX,IACuB,kCAMjC,cAACqC,EAAA,EAAMkB,OAAP,UACE,cAACvB,EAAA,EAAD,CAAQwB,QAAStF,GAAjB,sCCzSCuF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5E,MAAK,YAAkD,IAA/C6E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0c368948.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { Form, Button, Image, Modal, Table, Alert } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport { useReactToPrint } from \"react-to-print\";\n\nconst URL = \"https://kukapi.herokuapp.com\";\n// const URL = \"http://localhost:8080\";\n\nconst App = () => {\n  var loaded = false;\n  const [events, setEvents] = useState([]);\n  const [results, setResults] = useState([]);\n  const [body, setBody] = useState({\n    cookie: \"\",\n    viewstate: \"\",\n    viewstategen: \"\",\n  });\n  const [captcha, setCaptcha] = useState(\"\");\n  const [prn, setprn] = useState(\"\");\n  const [eventID, seteventID] = useState(\"0\");\n  const [loading, setLoading] = useState(false);\n  const [resID, setresID] = useState(\"15\");\n  const [details, setDetails] = useState(null);\n  const [marks, setMarks] = useState(null);\n  const [error, setError] = useState(null);\n  const [error2, setError2] = useState(null);\n  const tableHeader = [\n    \"Paper Code\",\n    \"Paper Name\",\n    \"Type\",\n    \"External\",\n    \"Internal\",\n    \"Total\",\n    \"Status\",\n  ];\n  const [total, setTotal] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const resultsRef = useRef(null);\n  const toPrint = useRef(null);\n\n  const handlePrint = useReactToPrint({\n    content: () => toPrint.current,\n  });\n\n  const executeScroll = (ref) =>\n    ref.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n\n  useEffect(() => {\n    if (!loaded) getEvents();\n    loaded = true;\n  }, []);\n  var subLength = 0;\n\n  const getResult = (event) => {\n    setError2(null);\n    event.preventDefault();\n    if (resID == \"15\") {\n      setError2(\"Select Semester First!\");\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    var data = {\n      prn: prn,\n      resID: resID,\n      eventID: eventID,\n      captcha: captcha,\n      cookie: body.cookie,\n      viewstate: body.viewstate,\n      viewstategen: body.viewstategen,\n    };\n    axios({\n      method: \"post\",\n      url: URL + \"/events/results/result\",\n      data: data,\n    })\n      .catch((err) => console.log(err))\n      .then((resp) => {\n        setDetails(resp.data.details);\n        setMarks(resp.data.marksheet);\n        setTotal(resp.data.total);\n        setLoading(false);\n        setShowResult(true);\n      });\n  };\n\n  const getResults = (event) => {\n    setError(null);\n    event.preventDefault();\n    if (eventID == \"0\") {\n      setError(\"Select Event First!\");\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    var data = {\n      prn: prn,\n      eventID: eventID,\n      captcha: captcha,\n      cookie: body.cookie,\n      viewstate: body.viewstate,\n      viewstategen: body.viewstategen,\n    };\n    axios({\n      method: \"post\",\n      url: URL + \"/events/results\",\n      data: data,\n    })\n      .catch((err) => console.log(err))\n      .then((resp) => {\n        if (resp.data.error) {\n          return resp.data;\n        }\n        setBody({\n          cookie: body.cookie,\n          viewstate: resp.data.newviewstate,\n          viewstategen: body.viewstategen,\n        });\n        return resp.data.results;\n      })\n      .then((sems) => {\n        if (sems.error) {\n          setError(sems.error);\n          setLoading(false);\n          return;\n        }\n        var newRes = [];\n        sems.forEach((sem) => {\n          var semester = sem.event_name.toString();\n          semester = semester.substring(semester.search(\"Sem\"));\n          newRes.push(semester);\n        });\n        setResults(newRes);\n        executeScroll(resultsRef);\n        setLoading(false);\n      });\n  };\n\n  const getEvents = () => {\n    setLoading(true);\n    axios\n      .get(URL + \"/events\")\n      .catch((err) => console.log(err))\n      .then((resp) => {\n        setEvents(resp.data.events);\n        setBody({\n          cookie: resp.data.cookie,\n          viewstate: resp.data.viewstate,\n          viewstategen: resp.data.viewstategen,\n        });\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-Header\">\n        <h1>KUK DIGITAL</h1>\n        <h6>On Steroids</h6>\n      </div>\n      <div className=\"Form\">\n        <div className=\"results\">\n          <Form onSubmit={getResults}>\n            <Form.Group controlId=\"selectEvent\">\n              <Form.Label>Select Exam Event</Form.Label>\n              <Form.Control\n                as=\"select\"\n                onChange={(event) => seteventID(event.target.value)}\n                required\n              >\n                <option value=\"0\">Select Event</option>\n                {events !== {} &&\n                  events.map((eve, index) => {\n                    var date = Object.keys(eve)[0];\n                    return (\n                      <option value={eve[date]} key={eve[date]}>\n                        {date.toString()}\n                      </option>\n                    );\n                  })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"selectPRN\">\n              <Form.Label>Enter PRN</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"PRN/Roll Number\"\n                onChange={(event) => setprn(event.target.value)}\n                required\n                variant=\"filled\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"selectCaptcha\">\n              <Form.Label>Enter Captcha Code</Form.Label>\n              <br />\n              <Image\n                src={URL + \"/captcha/\" + body.cookie}\n                style={{ padding: 10 }}\n                onLoad={() => setLoading(false)}\n              />\n              <br />\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Captcha\"\n                onChange={(event) => setCaptcha(event.target.value)}\n                required\n              />\n            </Form.Group>\n            {error !== null && (\n              <Alert variant=\"warning\" style={{ fontSize: 15 }}>\n                {error}\n              </Alert>\n            )}\n            <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n              {loading ? \"Loading...\" : \"Get Semesters\"}\n            </Button>\n          </Form>\n        </div>\n        {results.length > 0 && (\n          <div ref={resultsRef} className=\"results\">\n            <Form onSubmit={getResult}>\n              <Form.Group controlId=\"selectSem\">\n                <Form.Label>Select Semester</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  onChange={(event) => setresID(event.target.value)}\n                  required\n                >\n                  <option value=\"15\">Semester</option>\n                  {results.length > 0 &&\n                    results.map((sem, index) => {\n                      return (\n                        <option value={index} key={index}>\n                          {sem.toString()}\n                        </option>\n                      );\n                    })}\n                </Form.Control>\n              </Form.Group>\n              {error2 !== null && (\n                <Alert variant=\"warning\" style={{ fontSize: 15 }}>\n                  {error2}\n                </Alert>\n              )}\n              <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n                {loading ? \"Loading...\" : \"Show Result\"}\n              </Button>\n            </Form>\n          </div>\n        )}\n        {total != null && (\n          <Modal\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            show={showResult}\n            onHide={() => setShowResult(false)}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n                Your Result\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div style={{ fontSize: 14, margin: 5 }} ref={toPrint}>\n                {\"Student's Name: \" + details[\"Student's Name\"]} <br />\n                {\"Father's Name: \" + details[\"Father's Name\"]} <br />\n                {\"Mother's Name: \" + details[\"Mother's Name\"]} <br />\n                <br />\n                <Table striped bordered responsive>\n                  <thead>\n                    {tableHeader.map((element, index) => (\n                      <th key={index}>{element}</th>\n                    ))}\n                  </thead>\n                  <tbody>\n                    {marks != null &&\n                      marks.map((subject, index) => {\n                        if (subLength === 0) {\n                          subLength = subject.length;\n                        }\n                        if (subject.length === subLength) {\n                          return (\n                            <tr>\n                              <td>{subject[0]}</td>\n                              <td>{subject[1]}</td>\n                              <td>{subject[2]}</td>\n                              <td>{subject[5] + \"/\" + subject[3]}</td>\n                              <td>{subject[8] + \"/\" + subject[6]}</td>\n                              <td>{subject[11] + \"/\" + subject[9]}</td>\n                              <td>{subject[12]}</td>\n                            </tr>\n                          );\n                        }\n                      })}\n                  </tbody>\n                </Table>\n                {total != null &&\n                  total.map((element, index) => {\n                    return (\n                      <>\n                        {element.toString()} <br />\n                      </>\n                    );\n                  })}\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={handlePrint}>Print Result</Button>\n            </Modal.Footer>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n// KUK Digital Results\n// by PastVision\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}